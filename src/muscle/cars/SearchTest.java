/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package muscle.cars;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Adnan Alam
 */
public class SearchTest extends javax.swing.JFrame {

    /**
     * Creates new form SearchTest
     */

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    
    private DefaultListModel mod;
    
    public SearchTest() {
        initComponents();
        menu.add(panel);
        mod = new DefaultListModel();
        list.setModel(mod);
        conn = JavaConnect.connectDb();
    }
    /*
    public String[] searchSuggestions(String search) throws MalformedURLException, IOException, ParseException
    {
        
        JSONParser parser = new JSONParser();
        
        search = search.replace("", "+");
        
        URL oracle = new URL("http://suggestqueries.google.com/complete/search?q=" + search + "&client=firefox&hl=fr");
        URLConnection yc = oracle.openConnection();
        BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));
        
        String inputLine;
        String val = "";
        
        while((inputLine = in.readLine()) != null)
        {
            
            JSONArray a = (JSONArray)parser.parse(inputLine);
            
            for(Object o : a)
            {
                
                val = o.toString();
                
            } // end for
            
        } // end while
        
        in.close();
        String v[] = val.replace("[", "").replace("]", "").replace("\"", "").split(",");
        
        if(v.length == 1 && v[0].equals(""))
        {
            
            return new String[0];
            
        } // end if
        else
        {
            
            return v;
            
        } // end else
        
    } // end method searchSuggestions
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();

        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
        );

        menu.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Search:");

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(232, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        
        mod.removeAllElements();
        
        String keyword = searchTextField.getText();
        String sql = "SELECT * FROM cars WHERE year LIKE '%"+ keyword +"%' OR name LIKE '%"+ keyword +"%' OR model LIKE '%"+ keyword +"%'";
        
        try
        {
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            while(rs.next())
            {
                
                //JOptionPane.showMessageDialog(null, "" + rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4));
                //mod.removeAllElements();
                mod.addElement(rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4));
                
            } // end if
            menu.show(searchTextField, 0, searchTextField.getHeight());
            
        } // end try
        catch(Exception exception)
        {
            
            JOptionPane.showMessageDialog(null, exception);
            
        } // end catch Exception
        
        /*
        try
        {
        String search = searchTextField.getText().trim();
        
        if(!search.equals(""))
        {
            
            mod.removeAllElements();
            for(String item:searchSuggestions(search))
            {
                
                mod.addElement(item.toString());
                
            } // end for
            
            menu.show(searchTextField, 0, searchTextField.getHeight());
            
        } // end if
        } // end try
        catch(Exception exception)
        {
            
            JOptionPane.showMessageDialog(null, exception);
            
        } // end catch Exception
        */
        
    }//GEN-LAST:event_searchTextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
